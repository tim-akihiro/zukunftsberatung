name: Build Blogpost from Issue
on:
  issues:
    types: [opened, edited, labeled]
permissions:
  contents: write
  issues: write

jobs:
  build:
    if: contains(github.event.issue.labels.*.name, 'blogpost')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse Issue + Write Post
        id: gen
        uses: actions/github-script@v7
        with:
          script: |
            const core = require("@actions/core");
            const fs = require("fs");
            const path = require("path");

            const body = context.payload.issue.body || "";
            function val(id){ // GitHub Issue Forms: "### <Label>\n<value>"
              const re = new RegExp(`###\\s+${id}[\\s\\S]*?\\n([\\s\\S]*?)(?:\\n###|$)`, "i");
              const m = body.match(re);
              return m ? m[1].trim() : "";
            }

            const title = val("Titel");
            if(!title) core.setFailed("Titel fehlt");
            const slugManual = val("Slug (optional)");
            const tags = val("Tags (Komma-getrennt, klein, ohne Leerzeichen)").split(",").map(s=>s.trim()).filter(Boolean);
            const cover = val("Cover-Bild-URL (optional)");
            const excerpt = val("Kurz-Teaser (max. 240 Zeichen)");
            const metaTitle = val("Meta Title (optional)");
            const metaDesc = val("Meta Description (optional)");
            const bodymd = val("Artikel (Markdown)");
            if(!bodymd) core.setFailed("Artikel-Inhalt fehlt");

            function slugify(s){
              return s.toLowerCase()
                .normalize("NFKD").replace(/[\u0300-\u036f]/g,"")
                .replace(/[^a-z0-9]+/g,"-").replace(/^-+|-+$/g,"").slice(0,80);
            }
            const created = new Date(context.payload.issue.created_at);
            const yyyy = created.getUTCFullYear();
            const mm = String(created.getUTCMonth()+1).padStart(2,'0');
            const dd = String(created.getUTCDate()).padStart(2,'0');
            const date = `${yyyy}-${mm}-${dd}`;
            const slug = slugManual ? slugify(slugManual) : slugify(title);
            const fileName = `${date}-${slug}.md`;
            const repoPath = "finalfinal/blog/posts";
            const fullPath = path.join(process.cwd(), repoPath, fileName);

            const fm = [
              "---",
              `title: ${JSON.stringify(title)}`,
              `date: ${date}`,
              tags.length ? `tags: [${tags.join(", ")}]` : `tags: []`,
              cover ? `cover: ${JSON.stringify(cover)}` : ``,
              excerpt ? `excerpt: ${JSON.stringify(excerpt)}` : ``,
              metaTitle ? `metaTitle: ${JSON.stringify(metaTitle)}` : ``,
              metaDescription ? `metaDescription: ${JSON.stringify(metaDesc)}` : ``,
              "---",
              ""
            ].filter(Boolean).join("\n");

            fs.mkdirSync(path.join(process.cwd(), repoPath), { recursive: true });
            fs.writeFileSync(fullPath, fm + bodymd + "\n");

            core.setOutput("file", `${repoPath}/${fileName}`);
            core.setOutput("date", date);
            core.setOutput("slug", slug);

      - name: Commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add finalfinal/blog/posts/*.md
          git commit -m "blog: add post ${{ steps.gen.outputs.file }}" || echo "nichts zu committen"
          git push

      - name: Comment with link
        uses: actions/github-script@v7
        with:
          script: |
            const file = core.getInput('file') || "${{ steps.gen.outputs.file }}";
            const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/blob/${process.env.GITHUB_REF_NAME || 'main'}/${file}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Erstellt: ${url}`
            });
